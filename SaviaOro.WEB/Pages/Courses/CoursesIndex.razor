@page "/courses"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService


    <div class="card">
        <div class="card-header">
            <span>
                <i class="oi oi-file"></i> Listado de cursos
                <a class="btn btn-primary btn-sm float-end" href="/course/create">Nuevo curso</a>
            </span>
        </div>
        <div class="card-body">
            <GenericList MyList="Courses">
                <Body>
                    <div class="table-responsive">
                        <table class="table align-middle table-sm table-striped">
                            <thead>
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Titulo</th>
                                    <th scope="col">Descripción corta</th>
                                    <th scope="col">Descripción larga</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var course in Courses!)
                                {
                                    <tr>
                                        <td>
                                            <img src="@course.PhotoFullPath" width="80" height="80" style="border-radius:50%" />
                                        </td>
                                        <td>
                                            @course.Title
                                        </td>
                                        <td>
                                            @course.ShortDescription
                                        </td>
                                        <td>
                                            @course.LargeDescription
                                        </td>
                                        <td>
                                            <a class="btn btn-info btn-sm">Detalles</a>
                                            <a href="/course/edit/@course.Id" class="btn btn-warning btn-sm">Editar</a>
                                            <button class="btn btn-danger btn-sm" @onclick=@(() => DeleteAsync(course))>Borrar</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </Body>
            </GenericList>
        </div>
    </div>
@code {
    public List<Course>? Courses { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    private async Task LoadAsync()
    {
        var responseHppt = await repository.GetAsync<List<Course>>("api/courses");
        Courses = responseHppt.Response!;
    }

    private async Task DeleteAsync(Course course)
    {
        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = $"¿Esta seguro que quieres borrar el curso {course.Title}?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });

        var confirm = string.IsNullOrEmpty(result.Value);

        if (confirm)
        {
            return;
        }

        var responseHTTP = await repository.DeleteAsync($"api/courses/{course.Id}");

        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/courses");
            }
            else
            {
                var mensajeError = await responseHTTP.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            }
        }
        else
        {
            await LoadAsync();
        }
    }

}
